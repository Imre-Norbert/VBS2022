/************************************************************************************************************************************************************************************************************
************************************************************************************** I N C L U D E S ******************************************************************************************************
************************************************************************************************************************************************************************************************************/

#include <TM1637.h>
#include <avr/io.h>

/************************************************************************************************************************************************************************************************************/

/************************************************************************************************************************************************************************************************************
************************************************************************************** D E F I N E S ********************************************************************************************************
************************************************************************************************************************************************************************************************************/

/* This is used to set the output[pin2 on the ic] of the attiny HIGH or LOW, to address the PORTB register
   This pin is connected to the CLK input pin of the HW-069*/
#define ub_CLK_PIN (uint8_t) 3
/* This is used to set the output[pin3 on the ic] of the attiny HIGH or LOW, to address the PORTB register
   This pin is connected to the DIO input pin of the HW-069*/ 
#define ub_CLK_DIO (uint8_t) 4

/* This is used to read the supply voltage, ADC1 10bit [pin7 on the ic]*/
#define ub_VOLTAGE_MEASUREMENT (uint8_t) 2

/* Maximum Voltage to be measured is 30V, so 1 bit = 0.0293V */
//#define f_VOLT_PER_BIT (float) 0.0293
#define f_VOLT_PER_BIT (float) 0.0488
/************************************************************************************************************************************************************************************************************/

/************************************************************************************************************************************************************************************************************
***************************************************************************** G L O B A L    V A R I A B L E S **********************************************************************************************
************************************************************************************************************************************************************************************************************/

/* Create an instance of 7segment display, this function also set-s the pins to OUTPUT */
TM1637 tm1637( ub_CLK_PIN, ub_CLK_DIO );

/************************************************************************************************************************************************************************************************************/

/************************************************************************************************************************************************************************************************************
**************************************************************************** F U N C T I O N    D E C L A R A T I O N S *************************************************************************************
************************************************************************************************************************************************************************************************************/

/* This function will measure the voltage using an analog input pin, Its input is the pin number, and it will output the measured voltage in [V]*/
float f_MeasureVoltage( uint8_t ub_AdcPin );

/* This function is responsable for displaying the voltage to the HW-069 module, its input is a float */
void v_DisplayVoltage( float f_Voltage );

/************************************************************************************************************************************************************************************************************/

void setup() 
{
  /* Initialize the object */
  tm1637.init();
  
  /* Set the 7 segment LED-s brightness */
  tm1637.set( BRIGHT_TYPICAL );

  /* Set the ADC1 pin to INPUT */
  pinMode( ub_VOLTAGE_MEASUREMENT, INPUT );
}


void loop() 
{
  //tm1637.display( 1, (int) (f_MeasureVoltage( ub_VOLTAGE_MEASUREMENT )) );
  //tm1637.display( 1, 2 );
  v_DisplayVoltage( f_MeasureVoltage( ub_VOLTAGE_MEASUREMENT ) );
  delay( 300 );
}

/************************************************************************************************************************************************************************************************************
**************************************************************************** F U N C T I O N S **************************************************************************************************************
************************************************************************************************************************************************************************************************************/

float f_MeasureVoltage( uint8_t ub_AdcPin )
{
  float f_ReadVoltage = (float)( analogRead( ub_AdcPin ) );
  return f_ReadVoltage * f_VOLT_PER_BIT;
}

void v_DisplayVoltage( float f_Voltage )
{
  uint8_t aub_TimeDisp[4];
  
  uint8_t ub_WholePart = (uint8_t)( f_Voltage );
  f_Voltage -= ub_WholePart;
  uint8_t ub_Remainder = (uint8_t)( f_Voltage * 100 );

  if( ub_WholePart >= 10 )
  {
    aub_TimeDisp[ 0 ] = ub_WholePart / 10 ;
    aub_TimeDisp[ 1 ] = ub_WholePart % 10 ;
  }
  else
  {
    aub_TimeDisp[ 0 ] = 0;
    aub_TimeDisp[ 1 ] = ub_WholePart;
  }

  if( ub_Remainder >= 10 )
  {
    aub_TimeDisp[ 2 ] = ub_Remainder / 10 ;
    aub_TimeDisp[ 3 ] = ub_Remainder % 10;
  }
  else
  {
    aub_TimeDisp[ 2 ] = 0;
    aub_TimeDisp[ 3 ] = ub_Remainder;
  }

  tm1637.display(aub_TimeDisp);
  
}

/************************************************************************************************************************************************************************************************************/
